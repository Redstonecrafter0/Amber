{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: toNvg",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/amber/renderer/widgets/Button.kt",
      "language": "kotlin",
      "line": 39,
      "offset": 40,
      "length": 5,
      "code": {
        "startLine": 37,
        "length": 5,
        "offset": 102,
        "surroundingCode": "        renderers.nvg.render {\n            val color = when {\n                isHovered -> hoverColor.toNvg()\n                isActive -> activeColor.toNvg()\n                else -> color.toNvg()"
      }
    }
  ],
  "attributes": {
    "module": "project.main",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6460167776526753078"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: toNvg",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/amber/renderer/widgets/Button.kt",
      "language": "kotlin",
      "line": 40,
      "offset": 40,
      "length": 5,
      "code": {
        "startLine": 38,
        "length": 5,
        "offset": 119,
        "surroundingCode": "            val color = when {\n                isHovered -> hoverColor.toNvg()\n                isActive -> activeColor.toNvg()\n                else -> color.toNvg()\n            }"
      }
    }
  ],
  "attributes": {
    "module": "project.main",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "4416969883514659637"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: toNvg",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/amber/renderer/widgets/Button.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 30,
      "length": 5,
      "code": {
        "startLine": 39,
        "length": 5,
        "offset": 126,
        "surroundingCode": "                isHovered -> hoverColor.toNvg()\n                isActive -> activeColor.toNvg()\n                else -> color.toNvg()\n            }\n            fill(color) {"
      }
    }
  ],
  "attributes": {
    "module": "project.main",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1418828032888726564"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[OVERLOAD_RESOLUTION_AMBIGUITY] Overload resolution ambiguity: \npublic final fun fill(color: NVGColor, block: NanoVGRenderer.Functions.Path.() -> Unit): Unit defined in net.redstonecraft.opengl.render.NanoVGRenderer.Functions\npublic final fun fill(paint: NVGPaint, block: NanoVGRenderer.Functions.Path.() -> Unit): Unit defined in net.redstonecraft.opengl.render.NanoVGRenderer.Functions",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/amber/renderer/widgets/Button.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 12,
      "length": 4,
      "code": {
        "startLine": 41,
        "length": 4,
        "offset": 64,
        "surroundingCode": "                else -> color.toNvg()\n            }\n            fill(color) {\n                moveTo(x, y)\n                lineTo(x + width, y)"
      }
    }
  ],
  "attributes": {
    "module": "project.main",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8155506601524596675"
}]}